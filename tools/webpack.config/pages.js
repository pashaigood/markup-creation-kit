const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const Paths = require('./constants/Paths');
const HtmlBeautifyPlugin = require('html-beautify-webpack-plugin');

module.exports = (env) => {
  const pagesNames = walkSync(path.join(Paths.source, '/pages')).
      filter(pagesName => pagesName.includes('.pug'));

  const pages = pagesNames.map((pageName) => {
    return new HtmlWebpackPlugin({
      filename: pageName.replace('pug', 'html'),
      template: path.join(Paths.source, 'pages/' + pageName),
      minify: env === 'production' ? MinifyConfig : false,
    });
  });

  const lint = {
    loader: 'htmlhint-loader',
    options: {
      configFile: path.join(Paths.root, '.htmlhintrc'),
    },
  };

  const html = {
    loader: 'html-loader',
    options: {
      interpolate: true,
    },
  };

  return {
    entry: {
      index: path.join(Paths.source, 'scripts/index.js'),
    },
    module: {
      rules: [
        {
          test: /\.html$/,
          exclude: /node_modules/,
          use: [
            html,
          ],
        },
        {
          test: /\.pug$/,
          exclude: /node_modules/,
          use: [
            'pug-loader',
          ],
        },
      ],
    },
    plugins: [
      ...pages,
      env !== 'production' && new HtmlBeautifyPlugin(),
    ].filter(Boolean),
  };
};

function walkSync(dir, filelist) {
  let fs = require('fs'),
      files = fs.readdirSync(dir);
  filelist = filelist || [];

  files.forEach((file) => {
    if (fs.statSync(dir + '/' + file).isDirectory()) {
      filelist = walkSync(dir + '/' + file + '/', filelist);
    }
    else {
      filelist.push(file);
    }
  });

  return filelist;
}

const MinifyConfig = {
  'caseSensitive': false,
  'collapseBooleanAttributes': true,
  'collapseInlineTagWhitespace': false,
  'collapseWhitespace': true,
  'conservativeCollapse': false,
  // "customAttrCollapse": ".*",
  'decodeEntities': true,
  'html5': true,
  // "ignoreCustomFragments": [
  //   "<#[\\s\\S]*?#>",
  //   "<%[\\s\\S]*?%>",
  //   "<\\?[\\s\\S]*?\\?>"
  // ],
  'includeAutoGeneratedTags': false,
  'keepClosingSlash': false,
  'maxLineLength': 0,
  //
  'preserveLineBreaks': false,
  'preventAttributesEscaping': false,
  'processConditionalComments': true,
  //
  'removeAttributeQuotes': true,
  'removeComments': true,
  // "removeEmptyAttributes": true,
  // "removeEmptyElements": true,
  // "removeOptionalTags": true,
  'removeRedundantAttributes': true,
  'removeScriptTypeAttributes': true,
  // "removeStyleLinkTypeAttributes": true,
  // "removeTagWhitespace": true,
  'sortAttributes': true,
  'sortClassName': true,
  // "trimCustomFragments": true,
  'useShortDoctype': true,

  // "minifyCSS": true,
  // "minifyJS": true,
  // "processScripts": [
  //   "text/html"
  // ],
};
